# this is an minimal `stack config` file.
# http://stacker.readthedocs.io/en/latest/config.html
# 
# The stacker namespace, provided by the environment file.
# http://stacker.readthedocs.io/en/latest/config.html#namespace-delimiter
namespace: ${namespace}

# The bucket where stacker stores generated CloudFormation templates.
# http://stacker.readthedocs.io/en/latest/config.html#s3-bucket
stacker_bucket: stacker-migratable-aws-stacker

# This sets the syspath to include the local path, which allows access to the
# blueprints in the blueprints directory.
# http://stacker.readthedocs.io/en/latest/config.html#module-paths
sys_path: .

# The stacks key accepts a list of stack declarations.
# http://stacker.readthedocs.io/en/latest/config.html#stacks
stacks:

  # This is an example minimal stack.
  # The 'name' and 'class_path' keys are required.
  # The 'name' value must be unique.
  # The 'class_path' points at a Python stacker "blueprint" class.
  - name: bastion
    class_path: blueprints.bastion.Bastion
    variables:
      VpcId: ${vpcid}
      DefaultSG: ${secgrpid}
      PrivateSubnets:
        - subnet-0db3e3841b2aceee4
        - subnet-027c1767318b2cb66
        - subnet-0337b02a88e814f8d
      Environment: ${environment}
      NamePrefix: ${name_prefix}
      Tags:
        ck-costcenter: ${cost_center}
        ck-confidentiality: ${confidentiality}
        ck-project: ${project}
        ck-dataowners: ${data_owners}
        ck-codeowners: ${code_owners}
        ck-privacyreview: ${privacy_review}
        ck-securityreview: ${security_review}
        ck-projectowners: ${project_owners}
        ck-dataregulations: ${data_regulations}
        ck-availability: preemptible
        ck-deployer: Stacker
        ck-deletiondate: never
